name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          check-latest: true
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B formatter:validate install --file pom.xml

      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
        with:
          version: v0.11.1
          registry: true

      - name: Install Test using Helm
        run: |
          K8S_NAMESPACE=helm
          KIND_REGISTRY_GROUP=local
          VERSION=latest
          kubectl create namespace $K8S_NAMESPACE
          cd integration-tests/helm-kubernetes-minimal
          mvn clean package -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.registry=$KIND_REGISTRY \
            -Dquarkus.container-image.group=$KIND_REGISTRY_GROUP \
            -Dquarkus.container-image.tag=$VERSION \
            -Dquarkus.container-image.insecure=true
          helm lint target/helm/kubernetes/quarkus-helm-integration-tests-kubernetes-minimal
          helm install quarkus-hello-world target/helm/kubernetes/quarkus-helm-integration-tests-kubernetes-minimal -n $K8S_NAMESPACE --set app.image=$KIND_REGISTRY/$KIND_REGISTRY_GROUP/quarkus-helm-integration-tests-kubernetes-minimal:$VERSION
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=quarkus-helm-integration-tests-kubernetes-minimal -n $K8S_NAMESPACE

      - name: Delete namespace "helm" using Helm
        run: kubectl delete namespace helm

      - name: Start Helm Repository (ChartMuseum)
        run: docker run --rm -u 0 -it -d -p 8080:8080 -e DEBUG=1 -e STORAGE=local -e STORAGE_LOCAL_ROOTDIR=/charts -v $(pwd)/charts:/charts chartmuseum/chartmuseum:latest

      - name: Install Test using Helm Repository
        run: |
          K8S_NAMESPACE=helmrepo
          KIND_REGISTRY_GROUP=local
          VERSION=latest
          kubectl create namespace $K8S_NAMESPACE

          # create image plus push to a Helm repository
          cd integration-tests/helm-kubernetes-minimal
          mvn clean package -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.registry=$KIND_REGISTRY \
          -Dquarkus.container-image.group=$KIND_REGISTRY_GROUP \
          -Dquarkus.container-image.tag=$VERSION \
          -Dquarkus.container-image.insecure=true \
          -Dquarkus.helm.repository.push=true \
          -Dquarkus.helm.repository.url=http://localhost:8080/api/charts \
          -Dquarkus.helm.repository.type=CHARTMUSEUM

          # Install Helm repository
          helm repo add local http://localhost:8080

          # And install application from the Helm repository
          helm install --devel quarkus-hello-world local/quarkus-helm-integration-tests-kubernetes-minimal -n $K8S_NAMESPACE --set app.image=$KIND_REGISTRY/$KIND_REGISTRY_GROUP/quarkus-helm-integration-tests-kubernetes-minimal:$VERSION
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=quarkus-helm-integration-tests-kubernetes-minimal -n $K8S_NAMESPACE

      - name: Delete namespace "helmrepo" using Helm
        run: kubectl delete namespace helmrepo

      - name: Install REST Heroes microservices from Super-Heroes workshop using Helm
        run: |
          K8S_NAMESPACE=super-heroes
          KIND_REGISTRY_GROUP=local
          VERSION=latest
          QUARKUS_HELM_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          QUARKUS_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${quarkus.version}' --non-recursive exec:exec)
          kubectl create namespace $K8S_NAMESPACE
          kubectl config set-context --current --namespace=$K8S_NAMESPACE

          # checkout the quarkus super heroes repository
          git clone https://github.com/quarkusio/quarkus-super-heroes
          cd quarkus-super-heroes/rest-heroes

          # install Quarkus Helm extension
          mvn quarkus:add-extension -Dextensions="io.quarkiverse.helm:quarkus-helm:$QUARKUS_HELM_VERSION"

          # remove the third party installations via templates (we'll install these services via Helm dependencies :) )
          rm -rf src/main/kubernetes

          # remove the default application.yml as we'll provide a different one with our Helm properties
          rm -rf src/main/resources/application.yml

          # copy the import.sql file from
          cp deploy/db-init/initialize-tables.sql src/main/resources/

          cat > src/main/resources/application.properties << "EOF"
          quarkus.application.name=rest-heroes
          quarkus.http.port=8080
          quarkus.hibernate-orm.sql-load-script=initialize-tables.sql
          quarkus.hibernate-orm.database.generation=drop-and-create
          quarkus.datasource.reactive.url=postgresql://quarkus-rest-heroes-db:5432/heroes_database
          quarkus.datasource.username=superman
          quarkus.datasource.password=superman
          quarkus.kubernetes.deployment-target=kubernetes

          quarkus.helm.dependencies.0.alias=db
          quarkus.helm.dependencies.0.name=postgresql
          quarkus.helm.dependencies.0.version=11.9.1
          quarkus.helm.dependencies.0.repository=https://charts.bitnami.com/bitnami
          quarkus.helm.dependencies.0.wait-for-service=quarkus-rest-heroes-db:5432

          quarkus.helm.values.0.property=db.auth.database
          quarkus.helm.values.0.value=heroes_database
          quarkus.helm.values.1.property=db.auth.username
          quarkus.helm.values.1.value=superman
          quarkus.helm.values.2.property=db.auth.password
          quarkus.helm.values.2.value=superman
          EOF

          # generate helm manifests
          mvn clean package -DskipTests \
            -Dquarkus.platform.version=$QUARKUS_VERSION -Dquarkus.platform.group-id=io.quarkus \
            -Dquarkus.container-image.builder=docker \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.registry=$KIND_REGISTRY \
            -Dquarkus.container-image.group=$KIND_REGISTRY_GROUP \
            -Dquarkus.container-image.tag=$VERSION \
            -Dquarkus.container-image.insecure=true \
            -Dquarkus.helm.repository.push=true \
            -Dquarkus.helm.repository.url=http://localhost:8080/api/charts \
            -Dquarkus.helm.repository.type=CHARTMUSEUM

          # Install Helm repository
          helm repo add local http://localhost:8080

          # And install application from the Helm repository
          helm install quarkus-rest-heroes local/rest-heroes -n $K8S_NAMESPACE --set app.image=$KIND_REGISTRY/$KIND_REGISTRY_GROUP/rest-heroes:$VERSION
          kubectl wait --timeout=160s --for=condition=ready pod -l app.kubernetes.io/name=rest-heroes -n $K8S_NAMESPACE

          POD_NAME=$(kubectl get pod -l app.kubernetes.io/name=rest-heroes -n $K8S_NAMESPACE -o name)
          if [ $(kubectl exec -i $POD_NAME --container rest-heroes -n $K8S_NAMESPACE -- sh -c "curl -s -i localhost:8080") = *"500 Internal Server Error"* ]
          then
            echo Service rest-heroes is not working
            kubectl describe $POD_NAME
            kubectl logs $POD_NAME
            exit 1
          fi

      - name: Delete namespace "super-heroes" using Helm
        run: kubectl delete namespace super-heroes
