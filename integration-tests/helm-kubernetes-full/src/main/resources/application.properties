quarkus.helm.name=my-chart
# Kubernetes
quarkus.kubernetes.replicas=3
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=host.port
quarkus.kubernetes.annotations."my-annotation"=[{"HTTP": 80}, {"HTTPS":443}]
# Dependencies
quarkus.helm.dependencies.dependency-name-a.version=0.0.1
quarkus.helm.dependencies.dependency-name-a.repository=http://localhost:8080
quarkus.helm.dependencies.1.name=dependency-name-b
quarkus.helm.dependencies.1.alias=app
quarkus.helm.dependencies.1.version=0.0.1
quarkus.helm.dependencies.1.repository=http://localhost:8080
# Maintainers
quarkus.helm.maintainers.user1.email=user@group.com
# Normal use case
quarkus.helm.values.name.paths=metadata.name,(kind == Ingress).spec.rules.http.paths.backend.service.name
# When path is not found
quarkus.helm.values.1.property=not-found
quarkus.helm.values.1.paths=metadata.not-found
# Using brackets path
quarkus.helm.values.2.property=commit-id
quarkus.helm.values.2.paths=(kind == Deployment).spec.template.metadata.annotations.'app.quarkus.io/commit-id'
# Using values with profile
quarkus.helm.values.3.property=commit-id
quarkus.helm.values.3.paths=(kind == Deployment).spec.template.metadata.annotations.'app.quarkus.io/commit-id'
quarkus.helm.values.3.value=Only for DEV!
quarkus.helm.values.3.profile=dev
# Using integer values
quarkus.helm.values.4.property=types-number
quarkus.helm.values.4.value-as-int=12
# Using boolean values
quarkus.helm.values.5.property=types-bool
quarkus.helm.values.5.value-as-bool=true